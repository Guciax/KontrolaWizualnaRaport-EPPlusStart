using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Windows.Forms.VisualStyles;

namespace KontrolaWizualnaRaport
{
    class DgvImageButtonCell
    {
        public abstract class DataGridViewImageButtonCell : DataGridViewButtonCell
        {
            private bool _enabled;                // Is the button enabled
            private PushButtonState _buttonState; // What is the button state
            protected Image _buttonImageHot;      // The hot image
            protected Image _buttonImageNormal;   // The normal image
            protected Image _buttonImageDisabled; // The disabled image
            private int _buttonImageOffset;       // The amount of offset or border around the image

            protected DataGridViewImageButtonCell()
            {
                // In my project, buttons are disabled by default
                _enabled = false;
                _buttonState = PushButtonState.Disabled;

                // Changing this value affects the appearance of the image on the button.
                _buttonImageOffset = 2;

                // Call the routine to load the images specific to a column.
                LoadImages();
            }

            // Button Enabled Property
            public bool Enabled
            {
                get
                {
                    return _enabled;
                }

                set
                {
                    _enabled = value;
                    _buttonState = value ? PushButtonState.Normal : PushButtonState.Disabled;
                }
            }

            // PushButton State Property
            public PushButtonState ButtonState
            {
                get { return _buttonState; }
                set { _buttonState = value; }
            }

            // Image Property
            // Returns the correct image based on the control's state.
            public Image ButtonImage
            {
                get
                {
                    switch (_buttonState)
                    {
                        case PushButtonState.Disabled:
                            return _buttonImageDisabled;

                        case PushButtonState.Hot:
                            return _buttonImageHot;

                        case PushButtonState.Normal:
                            return _buttonImageNormal;

                        case PushButtonState.Pressed:
                            return _buttonImageNormal;

                        case PushButtonState.Default:
                            return _buttonImageNormal;

                        default:
                            return _buttonImageNormal;
                    }
                }
            }

            protected override void Paint(Graphics graphics,
                Rectangle clipBounds, Rectangle cellBounds, int rowIndex,
                DataGridViewElementStates elementState, object value,
                object formattedValue, string errorText,
                DataGridViewCellStyle cellStyle,
                DataGridViewAdvancedBorderStyle advancedBorderStyle,
                DataGridViewPaintParts paintParts)
            {
                //base.Paint(graphics, clipBounds, cellBounds, rowIndex, elementState, value, formattedValue, errorText, cellStyle, advancedBorderStyle, paintParts);

                // Draw the cell background, if specified.
                if ((paintParts & DataGridViewPaintParts.Background) ==
                    DataGridViewPaintParts.Background)
                {
                    SolidBrush cellBackground =
                        new SolidBrush(cellStyle.BackColor);
                    graphics.FillRectangle(cellBackground, cellBounds);
                    cellBackground.Dispose();
                }

                // Draw the cell borders, if specified.
                if ((paintParts & DataGridViewPaintParts.Border) ==
                    DataGridViewPaintParts.Border)
                {
                    PaintBorder(graphics, clipBounds, cellBounds, cellStyle,
                        advancedBorderStyle);
                }

                // Calculate the area in which to draw the button.
                // Adjusting the following algorithm and values affects
                // how the image will appear on the button.
                Rectangle buttonArea = cellBounds;

                Rectangle buttonAdjustment =
                    BorderWidths(advancedBorderStyle);

                buttonArea.X += buttonAdjustment.X;
                buttonArea.Y += buttonAdjustment.Y;
                buttonArea.Height -= buttonAdjustment.Height;
                buttonArea.Width -= buttonAdjustment.Width;

                Rectangle imageArea = new Rectangle(
                    buttonArea.X + _buttonImageOffset,
                    buttonArea.Y + _buttonImageOffset,
                    16,
                    16);

                ButtonRenderer.DrawButton(graphics, buttonArea, ButtonImage, imageArea, false, ButtonState);
            }

            // An abstract method that must be created in each derived class.
            // The images in the derived class will be loaded here.
            public abstract void LoadImages();
        }

        // Create a column class to display the Save buttons.
        public class DataGridViewImageButtonSaveColumn : DataGridViewButtonColumn
        {
            public DataGridViewImageButtonSaveColumn()
            {
                this.CellTemplate = new DataGridViewImageButtonSaveCell();
                this.Width = 22;
                this.Resizable = DataGridViewTriState.False;
            }
        }

        // Create a cell class to display the Save button cells. It is derived from the 
        // abstract class DataGridViewImageButtonCell. The only method that has to be 
        // implemented is LoadImages to load the Normal, Hot and Disabled Save images.
        public class DataGridViewImageButtonSaveCell : DataGridViewImageButtonCell
        {
            public override void LoadImages()
            {
                // The normal Save image
                byte[] normalArray = new byte[]
                {

                0x42, 0x4D, 0x36, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x28,
                0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x20, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC4, 0x0E, 0x00, 0x00, 0xC4, 0x0E, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF,
                0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF,
                0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00,
                0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF,
                0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF,
                0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF,
                0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00,
                0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF,
                0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF,
                0xFF, 0x00, 0xE8, 0x63, 0x41, 0x80, 0xE9, 0x63, 0x41, 0xFF, 0xE8, 0x63, 0x41, 0x80, 0xE0,
                0x5E, 0x3C, 0x00, 0xE0, 0x5E, 0x3C, 0x00, 0xE0, 0x5E, 0x3C, 0x00, 0xE0, 0x5E, 0x3C, 0x00,
                0xE0, 0x5E, 0x3C, 0x00, 0xE0, 0x5E, 0x3C, 0x00, 0xE0, 0x5E, 0x3C, 0x00, 0xE0, 0x5E, 0x3C,
                0x00, 0xE0, 0x5E, 0x3C, 0x00, 0xE0, 0x5E, 0x3C, 0x00, 0xE8, 0x63, 0x41, 0x80, 0xE9, 0x63,
                0x41, 0xFF, 0xE8, 0x63, 0x41, 0x80, 0xDD, 0x5D, 0x3B, 0xFF, 0xF7, 0xC9, 0xB9, 0xE0, 0xDD,
                0x5D, 0x3B, 0xFF, 0xDD, 0x5D, 0x3B, 0xFF, 0xDD, 0x5D, 0x3B, 0xFF, 0xDD, 0x5D, 0x3B, 0xFF,
                0xDD, 0x5D, 0x3B, 0xFF, 0xDD, 0x5D, 0x3B, 0xFF, 0xDD, 0x5D, 0x3B, 0xFF, 0xDD, 0x5D, 0x3B,
                0xFF, 0xDD, 0x5D, 0x3B, 0xFF, 0xDD, 0x5D, 0x3B, 0xFF, 0xDD, 0x5D, 0x3B, 0xFF, 0xDD, 0x5D,
                0x3B, 0xFF, 0xF7, 0xC9, 0xB9, 0xE0, 0xDD, 0x5D, 0x3B, 0xFF, 0xD1, 0x56, 0x34, 0x80, 0xCF,
                0x55, 0x33, 0xFF, 0xE2, 0xA5, 0x8C, 0xFF, 0xF3, 0xF3, 0xE3, 0xFF, 0xF3, 0xF3, 0xE3, 0xFF,
                0xF3, 0xF3, 0xE3, 0xFF, 0xF3, 0xF3, 0xE3, 0xFF, 0xF3, 0xF3, 0xE3, 0xFF, 0xF3, 0xF3, 0xE3,
                0xFF, 0xF3, 0xF3, 0xE3, 0xFF, 0xF3, 0xF3, 0xE3, 0xFF, 0xF3, 0xF3, 0xE3, 0xFF, 0xF3, 0xF3,
                0xE3, 0xFF, 0xE2, 0xA5, 0x8C, 0xFF, 0xCF, 0x55, 0x33, 0xFF, 0xD1, 0x56, 0x34, 0x80, 0xC6,
                0x50, 0x2E, 0x00, 0xC1, 0x4D, 0x2B, 0xFF, 0xF5, 0xF5, 0xE6, 0xFF, 0x98, 0x61, 0x30, 0xFF,
                0x9F, 0x68, 0x37, 0xFF, 0xA9, 0x71, 0x3F, 0xFF, 0xB3, 0x7B, 0x49, 0xFF, 0xBF, 0x87, 0x55,
                0xFF, 0xCD, 0x93, 0x60, 0xFF, 0xD9, 0xA0, 0x6D, 0xFF, 0xE5, 0xAB, 0x78, 0xFF, 0xEF, 0xB6,
                0x82, 0xFF, 0xF7, 0xBE, 0x8A, 0xFF, 0xF5, 0xF5, 0xE6, 0xFF, 0xC1, 0x4D, 0x2B, 0xFF, 0xC6,
                0x50, 0x2E, 0x00, 0xB5, 0x47, 0x25, 0x00, 0xB5, 0x47, 0x25, 0xFF, 0xF6, 0xF6, 0xE9, 0xFF,
                0x8F, 0x5A, 0x29, 0xFF, 0x97, 0x60, 0x2F, 0xFF, 0xA2, 0x6A, 0x39, 0xFF, 0xAE, 0x77, 0x46,
                0xFF, 0xBE, 0x88, 0x56, 0xFF, 0xCE, 0x9A, 0x68, 0xFF, 0xDE, 0xAC, 0x79, 0xFF, 0xEA, 0xBB,
                0x88, 0xFF, 0xF2, 0xC9, 0x95, 0xFF, 0xF8, 0xD1, 0x9D, 0xFF, 0xF6, 0xF6, 0xE9, 0xFF, 0xB5,
                0x47, 0x25, 0xFF, 0xB5, 0x47, 0x25, 0x00, 0xAD, 0x44, 0x22, 0x00, 0xAD, 0x44, 0x22, 0xFF,
                0xF8, 0xF8, 0xED, 0xFF, 0x3F, 0x4E, 0x10, 0xFF, 0x48, 0x56, 0x19, 0xFF, 0x58, 0x65, 0x28,
                0xFF, 0x6A, 0x74, 0x39, 0xFF, 0x89, 0x89, 0x56, 0xFF, 0xA1, 0x9B, 0x6D, 0xFF, 0xB2, 0xA9,
                0x7E, 0xFF, 0xBF, 0xB3, 0x8A, 0xFF, 0xD2, 0xC3, 0xA1, 0xFF, 0xEA, 0xD6, 0xBF, 0xFF, 0xF8,
                0xF8, 0xED, 0xFF, 0xAD, 0x44, 0x22, 0xFF, 0xAD, 0x44, 0x22, 0x00, 0xAB, 0x45, 0x23, 0x00,
                0xAB, 0x45, 0x23, 0xFF, 0xFA, 0xFA, 0xF1, 0xFF, 0x4D, 0x6A, 0x2A, 0xFF, 0x5E, 0x78, 0x39,
                0xFF, 0xBA, 0xB2, 0x8C, 0xFF, 0xF2, 0xD9, 0xC6, 0xFF, 0xF4, 0xD6, 0xC1, 0xFF, 0xF5, 0xD7,
                0xC3, 0xFF, 0xF6, 0xD9, 0xC6, 0xFF, 0xF6, 0xD8, 0xC6, 0xFF, 0xF6, 0xDD, 0xCD, 0xFF, 0xF6,
                0xE4, 0xD7, 0xFF, 0xFA, 0xFA, 0xF1, 0xFF, 0xAB, 0x45, 0x23, 0xFF, 0xAB, 0x45, 0x23, 0x00,
                0xB0, 0x4C, 0x2A, 0x00, 0xB0, 0x4C, 0x2A, 0xFF, 0xFB, 0xFB, 0xF5, 0xFF, 0x8F, 0x94, 0x5F,
                0xFF, 0xBE, 0xB1, 0x87, 0xFF, 0xF6, 0xCC, 0xAE, 0xFF, 0xF7, 0xCC, 0xB0, 0xFF, 0xF6, 0xD6,
                0xC0, 0xFF, 0xF6, 0xCE, 0xB2, 0xFF, 0xF6, 0xC9, 0xAD, 0xFF, 0xF5, 0xD0, 0xB7, 0xFF, 0xF5,
                0xD5, 0xC0, 0xFF, 0xF5, 0xDB, 0xCC, 0xFF, 0xFB, 0xFB, 0xF5, 0xFF, 0xB0, 0x4C, 0x2A, 0xFF,
                0xB0, 0x4C, 0x2A, 0x00, 0xBA, 0x57, 0x35, 0x00, 0xBA, 0x57, 0x35, 0xFF, 0xFD, 0xFD, 0xF9,
                0xFF, 0xF7, 0xA6, 0x6F, 0xFF, 0xF6, 0xAD, 0x7A, 0xFF, 0xF6, 0xB6, 0x89, 0xFF, 0xF6, 0xB4,
                0x85, 0xFF, 0xF6, 0xB4, 0x88, 0xFF, 0xF6, 0xB6, 0x8B, 0xFF, 0xF5, 0xB2, 0x85, 0xFF, 0xF5,
                0xB3, 0x87, 0xFF, 0xF5, 0xD4, 0xBD, 0xFF, 0xF4, 0xD6, 0xC1, 0xFF, 0xFD, 0xFD, 0xF9, 0xFF,
                0xBA, 0x57, 0x35, 0xFF, 0xBA, 0x57, 0x35, 0x00, 0xCE, 0x6A, 0x48, 0x00, 0xC8, 0x64, 0x42,
                0xFF, 0xFE, 0xFE, 0xFD, 0xFF, 0xF6, 0x85, 0x39, 0xFF, 0xF6, 0x87, 0x3C, 0xFF, 0xF6, 0x8B,
                0x42, 0xFF, 0xF6, 0x8A, 0x40, 0xFF, 0xF6, 0x87, 0x3D, 0xFF, 0xF6, 0x90, 0x4C, 0xFF, 0xF5,
                0x97, 0x58, 0xFF, 0xF5, 0x9D, 0x62, 0xFF, 0xF5, 0xBC, 0x96, 0xFF, 0xF4, 0xBF, 0x9B, 0xFF,
                0xFE, 0xFE, 0xFD, 0xFF, 0xC8, 0x64, 0x42, 0xFF, 0xCE, 0x6A, 0x48, 0x00, 0xD9, 0x74, 0x52,
                0x80, 0xD7, 0x72, 0x50, 0xFF, 0xEC, 0xB9, 0xA8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xEC, 0xB9, 0xA8, 0xFF, 0xD7, 0x72, 0x50, 0xFF, 0xD9, 0x74, 0x52,
                0x80, 0xE3, 0x7E, 0x5C, 0xFF, 0xF7, 0xC9, 0xB9, 0xE0, 0xE3, 0x7E, 0x5C, 0xFF, 0xE3, 0x7E,
                0x5C, 0xFF, 0xE3, 0x7E, 0x5C, 0xFF, 0xE3, 0x7E, 0x5C, 0xFF, 0xE3, 0x7E, 0x5C, 0xFF, 0xE3,
                0x7E, 0x5C, 0xFF, 0xE3, 0x7E, 0x5C, 0xFF, 0xE3, 0x7E, 0x5C, 0xFF, 0xE3, 0x7E, 0x5C, 0xFF,
                0xE3, 0x7E, 0x5C, 0xFF, 0xE3, 0x7E, 0x5C, 0xFF, 0xE3, 0x7E, 0x5C, 0xFF, 0xF7, 0xC9, 0xB9,
                0xE0, 0xE3, 0x7E, 0x5C, 0xFF, 0xEC, 0x86, 0x64, 0x80, 0xED, 0x87, 0x65, 0xFF, 0xEC, 0x86,
                0x64, 0x80, 0xE6, 0x80, 0x5E, 0x00, 0xE6, 0x80, 0x5E, 0x00, 0xE6, 0x80, 0x5E, 0x00, 0xE6,
                0x80, 0x5E, 0x00, 0xE6, 0x80, 0x5E, 0x00, 0xE6, 0x80, 0x5E, 0x00, 0xE6, 0x80, 0x5E, 0x00,
                0xE6, 0x80, 0x5E, 0x00, 0xE6, 0x80, 0x5E, 0x00, 0xE6, 0x80, 0x5E, 0x00, 0xEC, 0x86, 0x64,
                0x80, 0xED, 0x87, 0x65, 0xFF, 0xEC, 0x86, 0x64, 0x80, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF,
                0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF,
                0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00,
                0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF,
                0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00,
                };

                MemoryStream msNormal = new MemoryStream(normalArray);
                _buttonImageNormal = Image.FromStream(msNormal);

                // The disabled Save image
                byte[] disabledArray = new byte[]
                {



0x42, 0x4D, 0x36, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x28,
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x20, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x2E, 0x00, 0x00, 0x23, 0x2E, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE,
0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE,
0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00,
0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE,
0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE,
0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE,
0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00,
0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE,
0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE,
0xEE, 0x00, 0x96, 0x96, 0x96, 0x80, 0x96, 0x96, 0x96, 0xFF, 0x96, 0x96, 0x96, 0x80, 0x91,
0x91, 0x91, 0x00, 0x91, 0x91, 0x91, 0x00, 0x91, 0x91, 0x91, 0x00, 0x91, 0x91, 0x91, 0x00,
0x91, 0x91, 0x91, 0x00, 0x91, 0x91, 0x91, 0x00, 0x91, 0x91, 0x91, 0x00, 0x91, 0x91, 0x91,
0x00, 0x91, 0x91, 0x91, 0x00, 0x91, 0x91, 0x91, 0x00, 0x96, 0x96, 0x96, 0x80, 0x96, 0x96,
0x96, 0xFF, 0x96, 0x96, 0x96, 0x80, 0x91, 0x91, 0x91, 0xFF, 0xDE, 0xDE, 0xDE, 0xE0, 0x91,
0x91, 0x91, 0xFF, 0x91, 0x91, 0x91, 0xFF, 0x91, 0x91, 0x91, 0xFF, 0x91, 0x91, 0x91, 0xFF,
0x91, 0x91, 0x91, 0xFF, 0x91, 0x91, 0x91, 0xFF, 0x91, 0x91, 0x91, 0xFF, 0x91, 0x91, 0x91,
0xFF, 0x91, 0x91, 0x91, 0xFF, 0x91, 0x91, 0x91, 0xFF, 0x91, 0x91, 0x91, 0xFF, 0x91, 0x91,
0x91, 0xFF, 0xDE, 0xDE, 0xDE, 0xE0, 0x91, 0x91, 0x91, 0xFF, 0x8A, 0x8A, 0x8A, 0x80, 0x88,
0x88, 0x88, 0xFF, 0xCA, 0xCA, 0xCA, 0xFF, 0xEB, 0xEB, 0xEB, 0xFF, 0xEB, 0xEB, 0xEB, 0xFF,
0xEB, 0xEB, 0xEB, 0xFF, 0xEB, 0xEB, 0xEB, 0xFF, 0xEB, 0xEB, 0xEB, 0xFF, 0xEB, 0xEB, 0xEB,
0xFF, 0xEB, 0xEB, 0xEB, 0xFF, 0xEB, 0xEB, 0xEB, 0xFF, 0xEB, 0xEB, 0xEB, 0xFF, 0xEB, 0xEB,
0xEB, 0xFF, 0xCA, 0xCA, 0xCA, 0xFF, 0x88, 0x88, 0x88, 0xFF, 0x8A, 0x8A, 0x8A, 0x80, 0x84,
0x84, 0x84, 0x00, 0x81, 0x81, 0x81, 0xFF, 0xEC, 0xEC, 0xEC, 0xFF, 0x88, 0x88, 0x88, 0xFF,
0x8F, 0x8F, 0x8F, 0xFF, 0x96, 0x96, 0x96, 0xFF, 0xA0, 0xA0, 0xA0, 0xFF, 0xAB, 0xAB, 0xAB,
0xFF, 0xB6, 0xB6, 0xB6, 0xFF, 0xBF, 0xBF, 0xBF, 0xFF, 0xC8, 0xC8, 0xC8, 0xFF, 0xCE, 0xCE,
0xCE, 0xFF, 0xD3, 0xD3, 0xD3, 0xFF, 0xEC, 0xEC, 0xEC, 0xFF, 0x81, 0x81, 0x81, 0xFF, 0x84,
0x84, 0x84, 0x00, 0x7C, 0x7C, 0x7C, 0x00, 0x7C, 0x7C, 0x7C, 0xFF, 0xEC, 0xEC, 0xEC, 0xFF,
0x83, 0x83, 0x83, 0xFF, 0x88, 0x88, 0x88, 0xFF, 0x91, 0x91, 0x91, 0xFF, 0x9C, 0x9C, 0x9C,
0xFF, 0xAB, 0xAB, 0xAB, 0xFF, 0xBB, 0xBB, 0xBB, 0xFF, 0xC8, 0xC8, 0xC8, 0xFF, 0xD1, 0xD1,
0xD1, 0xFF, 0xD7, 0xD7, 0xD7, 0xFF, 0xDC, 0xDC, 0xDC, 0xFF, 0xEC, 0xEC, 0xEC, 0xFF, 0x7C,
0x7C, 0x7C, 0xFF, 0x7C, 0x7C, 0x7C, 0x00, 0x7A, 0x7A, 0x7A, 0x00, 0x79, 0x79, 0x79, 0xFF,
0xED, 0xED, 0xED, 0xFF, 0x70, 0x70, 0x70, 0xFF, 0x77, 0x77, 0x77, 0xFF, 0x83, 0x83, 0x83,
0xFF, 0x91, 0x91, 0x91, 0xFF, 0xA6, 0xA6, 0xA6, 0xFF, 0xB9, 0xB9, 0xB9, 0xFF, 0xC4, 0xC4,
0xC4, 0xFF, 0xCC, 0xCC, 0xCC, 0xFF, 0xD7, 0xD7, 0xD7, 0xFF, 0xE2, 0xE2, 0xE2, 0xFF, 0xED,
0xED, 0xED, 0xFF, 0x79, 0x79, 0x79, 0xFF, 0x7A, 0x7A, 0x7A, 0x00, 0x7B, 0x7B, 0x7B, 0x00,
0x7B, 0x7B, 0x7B, 0xFF, 0xED, 0xED, 0xED, 0xFF, 0x85, 0x85, 0x85, 0xFF, 0x91, 0x91, 0x91,
0xFF, 0xCB, 0xCB, 0xCB, 0xFF, 0xE3, 0xE3, 0xE3, 0xFF, 0xE2, 0xE2, 0xE2, 0xFF, 0xE2, 0xE2,
0xE2, 0xFF, 0xE3, 0xE3, 0xE3, 0xFF, 0xE2, 0xE2, 0xE2, 0xFF, 0xE5, 0xE5, 0xE5, 0xFF, 0xE7,
0xE7, 0xE7, 0xFF, 0xED, 0xED, 0xED, 0xFF, 0x7B, 0x7B, 0x7B, 0xFF, 0x7B, 0x7B, 0x7B, 0x00,
0x7F, 0x7F, 0x7F, 0x00, 0x80, 0x80, 0x80, 0xFF, 0xED, 0xED, 0xED, 0xFF, 0xB0, 0xB0, 0xB0,
0xFF, 0xCB, 0xCB, 0xCB, 0xFF, 0xDD, 0xDD, 0xDD, 0xFF, 0xDD, 0xDD, 0xDD, 0xFF, 0xE2, 0xE2,
0xE2, 0xFF, 0xDE, 0xDE, 0xDE, 0xFF, 0xDC, 0xDC, 0xDC, 0xFF, 0xDF, 0xDF, 0xDF, 0xFF, 0xE2,
0xE2, 0xE2, 0xFF, 0xE4, 0xE4, 0xE4, 0xFF, 0xED, 0xED, 0xED, 0xFF, 0x80, 0x80, 0x80, 0xFF,
0x7F, 0x7F, 0x7F, 0x00, 0x88, 0x88, 0x88, 0x00, 0x88, 0x88, 0x88, 0xFF, 0xED, 0xED, 0xED,
0xFF, 0xC5, 0xC5, 0xC5, 0xFF, 0xCB, 0xCB, 0xCB, 0xFF, 0xD1, 0xD1, 0xD1, 0xFF, 0xCE, 0xCE,
0xCE, 0xFF, 0xD0, 0xD0, 0xD0, 0xFF, 0xD1, 0xD1, 0xD1, 0xFF, 0xCD, 0xCD, 0xCD, 0xFF, 0xCE,
0xCE, 0xCE, 0xFF, 0xE1, 0xE1, 0xE1, 0xFF, 0xE2, 0xE2, 0xE2, 0xFF, 0xED, 0xED, 0xED, 0xFF,
0x88, 0x88, 0x88, 0xFF, 0x88, 0x88, 0x88, 0x00, 0x97, 0x97, 0x97, 0x00, 0x94, 0x94, 0x94,
0xFF, 0xEE, 0xEE, 0xEE, 0xFF, 0xA7, 0xA7, 0xA7, 0xFF, 0xA9, 0xA9, 0xA9, 0xFF, 0xAC, 0xAC,
0xAC, 0xFF, 0xAB, 0xAB, 0xAB, 0xFF, 0xAA, 0xAA, 0xAA, 0xFF, 0xB2, 0xB2, 0xB2, 0xFF, 0xB9,
0xB9, 0xB9, 0xFF, 0xBE, 0xBE, 0xBE, 0xFF, 0xD5, 0xD5, 0xD5, 0xFF, 0xD7, 0xD7, 0xD7, 0xFF,
0xEE, 0xEE, 0xEE, 0xFF, 0x94, 0x94, 0x94, 0xFF, 0x97, 0x97, 0x97, 0x00, 0xA1, 0xA1, 0xA1,
0x80, 0xA0, 0xA0, 0xA0, 0xFF, 0xD6, 0xD6, 0xD6, 0xFF, 0xEE, 0xEE, 0xEE, 0xFF, 0xEE, 0xEE,
0xEE, 0xFF, 0xEE, 0xEE, 0xEE, 0xFF, 0xEE, 0xEE, 0xEE, 0xFF, 0xEE, 0xEE, 0xEE, 0xFF, 0xEE,
0xEE, 0xEE, 0xFF, 0xEE, 0xEE, 0xEE, 0xFF, 0xEE, 0xEE, 0xEE, 0xFF, 0xEE, 0xEE, 0xEE, 0xFF,
0xEE, 0xEE, 0xEE, 0xFF, 0xD6, 0xD6, 0xD6, 0xFF, 0xA0, 0xA0, 0xA0, 0xFF, 0xA1, 0xA1, 0xA1,
0x80, 0xAB, 0xAB, 0xAB, 0xFF, 0xDE, 0xDE, 0xDE, 0xE0, 0xAB, 0xAB, 0xAB, 0xFF, 0xAB, 0xAB,
0xAB, 0xFF, 0xAB, 0xAB, 0xAB, 0xFF, 0xAB, 0xAB, 0xAB, 0xFF, 0xAB, 0xAB, 0xAB, 0xFF, 0xAB,
0xAB, 0xAB, 0xFF, 0xAB, 0xAB, 0xAB, 0xFF, 0xAB, 0xAB, 0xAB, 0xFF, 0xAB, 0xAB, 0xAB, 0xFF,
0xAB, 0xAB, 0xAB, 0xFF, 0xAB, 0xAB, 0xAB, 0xFF, 0xAB, 0xAB, 0xAB, 0xFF, 0xDE, 0xDE, 0xDE,
0xE0, 0xAB, 0xAB, 0xAB, 0xFF, 0xB3, 0xB3, 0xB3, 0x80, 0xB5, 0xB5, 0xB5, 0xFF, 0xB3, 0xB3,
0xB3, 0x80, 0xAE, 0xAE, 0xAE, 0x00, 0xAE, 0xAE, 0xAE, 0x00, 0xAE, 0xAE, 0xAE, 0x00, 0xAE,
0xAE, 0xAE, 0x00, 0xAE, 0xAE, 0xAE, 0x00, 0xAE, 0xAE, 0xAE, 0x00, 0xAE, 0xAE, 0xAE, 0x00,
0xAE, 0xAE, 0xAE, 0x00, 0xAE, 0xAE, 0xAE, 0x00, 0xAE, 0xAE, 0xAE, 0x00, 0xB3, 0xB3, 0xB3,
0x80, 0xB5, 0xB5, 0xB5, 0xFF, 0xB3, 0xB3, 0xB3, 0x80, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE,
0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE,
0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00,
0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE,
0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00, 0xEE, 0xEE, 0xEE, 0x00,
                };

                MemoryStream msDisabled = new MemoryStream(disabledArray);
                _buttonImageDisabled = Image.FromStream(msDisabled);

                // The hot Save image
                byte[] hotArray = new byte[]
                {
            0x42, 0x4D, 0x36, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x28,
            0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x0B, 0x00, 0x00, 0x12, 0x0B, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x79, 0x3A, 0x0F,
            0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F,
            0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F,
            0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0xFF, 0x00, 0xFF, 0x79, 0x3A, 0x0F,
            0xA0, 0x45, 0x11, 0xA0, 0x45, 0x11, 0xA0, 0x77, 0x48, 0x9D, 0xA0, 0x9F, 0x4D, 0x28, 0x05,
            0x4D, 0x28, 0x05, 0xFB, 0xFE, 0xFF, 0xE5, 0xE2, 0xE7, 0xC5, 0xBC, 0xBF, 0x9D, 0xA0, 0x9F,
            0x4D, 0x28, 0x05, 0x72, 0x4C, 0x03, 0xA0, 0x77, 0x48, 0xA0, 0x45, 0x11, 0x79, 0x3A, 0x0F,
            0x79, 0x3A, 0x0F, 0xA0, 0x45, 0x11, 0xA0, 0x45, 0x11, 0xA0, 0x77, 0x48, 0x9C, 0x9E, 0x9C,
            0x4D, 0x28, 0x05, 0x6C, 0x40, 0x01, 0xFB, 0xFE, 0xFF, 0xFB, 0xFE, 0xFF, 0xE5, 0xE2, 0xE7,
            0xC5, 0xBC, 0xBF, 0x4D, 0x28, 0x05, 0x72, 0x4C, 0x03, 0xA0, 0x77, 0x48, 0xA0, 0x45, 0x11,
            0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0xA0, 0x45, 0x11, 0xA0, 0x45, 0x11, 0xA0, 0x77, 0x48,
            0xA7, 0xAA, 0xA7, 0x4D, 0x28, 0x05, 0x6C, 0x3C, 0x02, 0xFB, 0xFE, 0xFF, 0xF0, 0xF3, 0xF8,
            0xFB, 0xFB, 0xFB, 0xE5, 0xE2, 0xE7, 0x4D, 0x28, 0x05, 0x72, 0x4C, 0x03, 0xA0, 0x77, 0x48,
            0xA0, 0x45, 0x11, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0xA0, 0x45, 0x11, 0xA0, 0x45, 0x11,
            0xA0, 0x77, 0x48, 0xC5, 0xCA, 0xCA, 0x4D, 0x28, 0x05, 0x4D, 0x28, 0x05, 0xFB, 0xFE, 0xFF,
            0xF0, 0xF3, 0xF8, 0xF0, 0xF3, 0xF8, 0xFF, 0xFF, 0xFF, 0x4D, 0x28, 0x05, 0x72, 0x4C, 0x03,
            0xA0, 0x77, 0x48, 0xA0, 0x45, 0x11, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0xA0, 0x45, 0x11,
            0xA0, 0x45, 0x11, 0x86, 0x39, 0x0D, 0xA0, 0x77, 0x48, 0xA0, 0x77, 0x48, 0xA0, 0x77, 0x48,
            0xA0, 0x77, 0x48, 0xA0, 0x77, 0x48, 0xA0, 0x77, 0x48, 0xA0, 0x77, 0x48, 0xA0, 0x77, 0x48,
            0xA0, 0x77, 0x48, 0x86, 0x39, 0x0D, 0xA0, 0x45, 0x11, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F,
            0xA0, 0x45, 0x11, 0xA0, 0x45, 0x11, 0xA0, 0x45, 0x11, 0xA0, 0x45, 0x11, 0xA0, 0x45, 0x11,
            0xA0, 0x45, 0x11, 0xA0, 0x45, 0x11, 0xA0, 0x45, 0x11, 0xA0, 0x45, 0x11, 0xA0, 0x45, 0x11,
            0xA0, 0x45, 0x11, 0xA0, 0x45, 0x11, 0xA0, 0x45, 0x11, 0xA0, 0x45, 0x11, 0x79, 0x3A, 0x0F,
            0x79, 0x3A, 0x0F, 0xA0, 0x45, 0x11, 0xAB, 0x60, 0x30, 0xCA, 0xBD, 0xAF, 0xCA, 0xBD, 0xAF,
            0xCA, 0xBD, 0xAF, 0xCA, 0xBD, 0xAF, 0xCA, 0xBD, 0xAF, 0xCA, 0xBD, 0xAF, 0xCA, 0xBD, 0xAF,
            0xCA, 0xBD, 0xAF, 0xCA, 0xBD, 0xAF, 0xCA, 0xBD, 0xAF, 0xAB, 0x60, 0x30, 0xA0, 0x45, 0x11,
            0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0xA0, 0x45, 0x11, 0xCA, 0xBD, 0xAF, 0xDD, 0xE1, 0xE5,
            0xE0, 0xE1, 0xE1, 0xE6, 0xE7, 0xE7, 0xEA, 0xEB, 0xEB, 0xED, 0xEE, 0xEE, 0xEE, 0xEE, 0xEF,
            0xEB, 0xED, 0xED, 0xE9, 0xE9, 0xEA, 0xE2, 0xE2, 0xE3, 0xDC, 0xDD, 0xDE, 0xCA, 0xBD, 0xAF,
            0xA0, 0x45, 0x11, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0xA0, 0x45, 0x11, 0xCA, 0xBD, 0xAF,
            0xE1, 0xE3, 0xE7, 0xA3, 0xA3, 0xA4, 0xA3, 0xA3, 0xA4, 0xA3, 0xA3, 0xA4, 0xA3, 0xA3, 0xA4,
            0xA3, 0xA3, 0xA4, 0xA3, 0xA3, 0xA4, 0xA3, 0xA3, 0xA4, 0xA3, 0xA3, 0xA4, 0xE1, 0xE2, 0xE3,
            0xCA, 0xBD, 0xAF, 0xA0, 0x45, 0x11, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0xA0, 0x45, 0x11,
            0xCA, 0xBD, 0xAF, 0xE1, 0xE3, 0xE6, 0xE6, 0xE6, 0xE6, 0xEB, 0xEB, 0xEB, 0xF2, 0xF2, 0xF2,
            0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF4, 0xF3, 0xF3, 0xF3, 0xEF, 0xEF, 0xEF, 0xE9, 0xE9, 0xE9,
            0xE2, 0xE2, 0xE3, 0xCA, 0xBD, 0xAF, 0xA0, 0x45, 0x11, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F,
            0xA0, 0x45, 0x11, 0xCA, 0xBD, 0xAF, 0xE3, 0xE6, 0xEA, 0xA3, 0xA3, 0xA4, 0xA3, 0xA3, 0xA4,
            0xA3, 0xA3, 0xA4, 0xA3, 0xA3, 0xA4, 0xA3, 0xA3, 0xA4, 0xA3, 0xA3, 0xA4, 0xA3, 0xA3, 0xA4,
            0xA3, 0xA3, 0xA4, 0xE3, 0xE5, 0xE6, 0xCA, 0xBD, 0xAF, 0xA0, 0x45, 0x11, 0x79, 0x3A, 0x0F,
            0x79, 0x3A, 0x0F, 0xA0, 0x45, 0x11, 0xCA, 0xBD, 0xAF, 0xE2, 0xE3, 0xE6, 0xE7, 0xE7, 0xE6,
            0xED, 0xED, 0xEB, 0xF2, 0xF2, 0xEF, 0xF4, 0xF4, 0xF2, 0xF6, 0xF6, 0xF3, 0xF3, 0xF3, 0xF2,
            0xEF, 0xEF, 0xEE, 0xE9, 0xE9, 0xE7, 0xE2, 0xE3, 0xE2, 0xCA, 0xBD, 0xAF, 0xA0, 0x45, 0x11,
            0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0xA0, 0x45, 0x11, 0x1A, 0x1B, 0x89, 0x1A, 0x1B, 0x89,
            0x1A, 0x1B, 0x89, 0x1A, 0x1B, 0x89, 0x1A, 0x1B, 0x89, 0x1A, 0x1B, 0x89, 0x1A, 0x1B, 0x89,
            0x1A, 0x1B, 0x89, 0x1A, 0x1B, 0x89, 0x1A, 0x1B, 0x89, 0x1A, 0x1B, 0x89, 0x1A, 0x1B, 0x89,
            0xA0, 0x45, 0x11, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0xA0, 0x45, 0x11, 0x1A, 0x1B, 0x89,
            0x1B, 0x1D, 0xAA, 0x1B, 0x1D, 0xAA, 0x1B, 0x1D, 0xAA, 0x1B, 0x1D, 0xAA, 0x1B, 0x1D, 0xAA,
            0x1B, 0x1D, 0xAA, 0x1B, 0x1D, 0xAA, 0x1B, 0x1D, 0xAA, 0x1B, 0x1D, 0xAA, 0x1B, 0x1D, 0xAA,
            0x1A, 0x1B, 0x89, 0xA0, 0x45, 0x11, 0x79, 0x3A, 0x0F, 0xFF, 0x00, 0xFF, 0x79, 0x3A, 0x0F,
            0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F,
            0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F,
            0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0x79, 0x3A, 0x0F, 0xFF, 0x00, 0xFF
                };

                MemoryStream msHot = new MemoryStream(hotArray);
                _buttonImageHot = Image.FromStream(msHot);
            }
        }

        // Create a column class to display the Print buttons.
        public class DataGridViewImageButtonPrintColumn : DataGridViewButtonColumn
        {
            public DataGridViewImageButtonPrintColumn()
            {
                this.CellTemplate = new DataGridViewImageButtonPrintCell();
                this.Width = 22;
                this.Resizable = DataGridViewTriState.False;
            }
        }


        // Create a cell class to display the Print button cells. It is derived from the 
        // abstract class DataGridViewImageButtonCell. The only method that has to be 
        // implemented is LoadImages to load the Normal, Hot and Disabled Print images.
        public class DataGridViewImageButtonPrintCell : DataGridViewImageButtonCell
        {
            public override void LoadImages()
            {
                // The normal Print image
                byte[] normalArray = new byte[]
                {
            0x42, 0x4D, 0x36, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x04, 0x00, 0x00, 0x28,
            0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x0B, 0x00, 0x00, 0x13, 0x0B, 0x00,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x0E, 0x08, 0x09, 0xFF, 0x0F, 0x0A,
            0x0B, 0xFF, 0x15, 0x0F, 0x10, 0xFF, 0x16, 0x0F, 0x10, 0xFF, 0x16, 0x10, 0x11, 0xFF, 0x17,
            0x11, 0x11, 0xFF, 0x17, 0x11, 0x12, 0xFF, 0x17, 0x11, 0x13, 0xFF, 0x20, 0x1A, 0x1A, 0xFF,
            0x20, 0x1A, 0x1B, 0xFF, 0x2C, 0x28, 0x28, 0xFF, 0x2C, 0x28, 0x29, 0xFF, 0x2E, 0x2B, 0x2D,
            0xFF, 0x2F, 0x2B, 0x2D, 0xFF, 0x39, 0x32, 0x2F, 0xFF, 0x32, 0x31, 0x33, 0xFF, 0x37, 0x33,
            0x3A, 0xFF, 0x38, 0x33, 0x38, 0xFF, 0x38, 0x31, 0x3C, 0xFF, 0x39, 0x31, 0x3D, 0xFF, 0x3A,
            0x32, 0x3E, 0xFF, 0x3B, 0x34, 0x3E, 0xFF, 0x3C, 0x34, 0x3F, 0xFF, 0x40, 0x33, 0x35, 0xFF,
            0x41, 0x34, 0x36, 0xFF, 0x40, 0x38, 0x35, 0xFF, 0x46, 0x39, 0x3B, 0xFF, 0x3B, 0x34, 0x40,
            0xFF, 0x3B, 0x34, 0x41, 0xFF, 0x3C, 0x35, 0x42, 0xFF, 0x3D, 0x35, 0x43, 0xFF, 0x3D, 0x36,
            0x43, 0xFF, 0x3E, 0x36, 0x42, 0xFF, 0x3F, 0x37, 0x43, 0xFF, 0x3E, 0x37, 0x44, 0xFF, 0x3E,
            0x37, 0x45, 0xFF, 0x3E, 0x37, 0x46, 0xFF, 0x3F, 0x38, 0x46, 0xFF, 0x3F, 0x39, 0x47, 0xFF,
            0x40, 0x38, 0x46, 0xFF, 0x41, 0x39, 0x47, 0xFF, 0x40, 0x39, 0x48, 0xFF, 0x41, 0x3A, 0x49,
            0xFF, 0x41, 0x3A, 0x4A, 0xFF, 0x42, 0x3B, 0x4C, 0xFF, 0x43, 0x3D, 0x4E, 0xFF, 0x44, 0x3D,
            0x4C, 0xFF, 0x4F, 0x49, 0x46, 0xFF, 0x57, 0x4E, 0x4D, 0xFF, 0x54, 0x54, 0x54, 0xFF, 0x54,
            0x56, 0x57, 0xFF, 0x5C, 0x54, 0x52, 0xFF, 0x5A, 0x58, 0x58, 0xFF, 0x5D, 0x5F, 0x5F, 0xFF,
            0x65, 0x5B, 0x58, 0xFF, 0x61, 0x5C, 0x5B, 0xFF, 0x62, 0x5D, 0x5D, 0xFF, 0x62, 0x5E, 0x5D,
            0xFF, 0x63, 0x5E, 0x5E, 0xFF, 0x67, 0x5E, 0x5C, 0xFF, 0x68, 0x5E, 0x63, 0xFF, 0x69, 0x5E,
            0x64, 0xFF, 0x6D, 0x64, 0x61, 0xFF, 0x6F, 0x66, 0x62, 0xFF, 0x7A, 0x6E, 0x6A, 0xFF, 0x7D,
            0x6F, 0x6D, 0xFF, 0x70, 0x71, 0x71, 0xFF, 0x72, 0x73, 0x73, 0xFF, 0x73, 0x74, 0x74, 0xFF,
            0x83, 0x76, 0x73, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x83, 0x81, 0x80, 0xFF, 0x94, 0x90, 0x8F,
            0xFF, 0xAF, 0xA0, 0x9A, 0xFF, 0xB1, 0xA1, 0x9A, 0xFF, 0xB0, 0xA1, 0x9B, 0xFF, 0xB3, 0xA3,
            0x9C, 0xFF, 0xB3, 0xA5, 0xA0, 0xFF, 0xB3, 0xA6, 0xA0, 0xFF, 0xBD, 0xBD, 0xBD, 0xFF, 0xC0,
            0xB3, 0xAD, 0xFF, 0xC0, 0xB3, 0xAE, 0xFF, 0xCF, 0xC4, 0xBF, 0xFF, 0xC6, 0xC6, 0xC6, 0xFF,
            0xD1, 0xC6, 0xC0, 0xFF, 0xE5, 0xE5, 0xE5, 0xFF, 0xEA, 0xEA, 0xEA, 0xFF, 0xED, 0xED, 0xED,
            0xFF, 0xF0, 0xF0, 0xF0, 0xFF, 0xF1, 0xF1, 0xF1, 0xFF, 0xF3, 0xF3, 0xF3, 0xFF, 0xF4, 0xF4,
            0xF4, 0xFF, 0xF5, 0xF5, 0xF5, 0xFF, 0xF7, 0xF7, 0xF7, 0xFF, 0xF9, 0xF9, 0xF9, 0xFF, 0xFB,
            0xFB, 0xFB, 0xFF, 0xFC, 0xFC, 0xFC, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
            0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
            0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00,
            0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00,
            0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF,
            0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
            0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00,
            0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00,
            0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF,
            0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
            0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00,
            0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00,
            0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF,
            0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
            0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00,
            0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00,
            0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF,
            0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
            0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00,
            0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00,
            0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF,
            0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
            0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00,
            0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00,
            0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF,
            0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
            0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00,
            0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00,
            0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF,
            0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
            0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00,
            0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00,
            0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF,
            0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
            0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00,
            0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00,
            0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF,
            0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
            0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00,
            0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00,
            0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF,
            0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
            0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x53, 0x53,
            0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53,
            0x4F, 0x4F, 0x4F, 0x4F, 0x4F, 0x4F, 0x4F, 0x4F, 0x4F, 0x4F, 0x4F, 0x4F, 0x4F, 0x4F, 0x53,
            0x53, 0x31, 0x59, 0x62, 0x61, 0x60, 0x5E, 0x5C, 0x58, 0x56, 0x55, 0x55, 0x57, 0x53, 0x0F,
            0x53, 0x48, 0x19, 0x47, 0x62, 0x62, 0x62, 0x62, 0x61, 0x5F, 0x5D, 0x5A, 0x5B, 0x5C, 0x34,
            0x0E, 0x48, 0x48, 0x4A, 0x3F, 0x35, 0x43, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x44, 0x32,
            0x2F, 0x4C, 0x48, 0x48, 0x49, 0x40, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03,
            0x00, 0x36, 0x4B, 0x48, 0x48, 0x4D, 0x45, 0x18, 0x1A, 0x1A, 0x1A, 0x1A, 0x1A, 0x1A, 0x1A,
            0x1A, 0x17, 0x41, 0x4E, 0x48, 0x48, 0x51, 0x3E, 0x07, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
            0x09, 0x09, 0x06, 0x3B, 0x50, 0x48, 0x48, 0x54, 0x33, 0x04, 0x08, 0x08, 0x08, 0x08, 0x08,
            0x08, 0x08, 0x08, 0x05, 0x30, 0x52, 0x48, 0x53, 0x48, 0x48, 0x3D, 0x37, 0x39, 0x3A, 0x3A,
            0x3A, 0x3A, 0x39, 0x38, 0x3C, 0x48, 0x48, 0x53, 0x53, 0x53, 0x53, 0x53, 0x10, 0x0C, 0x0B,
            0x0A, 0x0A, 0x0B, 0x0D, 0x11, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x2D, 0x24,
            0x1C, 0x14, 0x13, 0x12, 0x14, 0x16, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x2C,
            0x2B, 0x29, 0x25, 0x22, 0x1E, 0x1B, 0x15, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53,
            0x2C, 0x2E, 0x26, 0x23, 0x1F, 0x1D, 0x20, 0x15, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53,
            0x53, 0x53, 0x2C, 0x2A, 0x28, 0x27, 0x21, 0x20, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53,
            0x53, 0x53, 0x53, 0x53, 0x2C, 0x2C, 0x2C, 0x2C, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53
                };

                MemoryStream msNormal = new MemoryStream(normalArray);
                _buttonImageNormal = Image.FromStream(msNormal);

                // The disabled Print image
                byte[] disabledArray = new byte[]
                {
            0x42, 0x4D, 0x36, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x28,
            0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x0B, 0x00, 0x00, 0x13, 0x0B, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB,
            0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB,
            0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC2, 0xC2, 0xC2, 0xF4, 0xF4, 0xF4, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFE,
            0xFD, 0xFD, 0xFD, 0xFA, 0xFA, 0xFA, 0xF7, 0xF7, 0xF7, 0xF3, 0xF3, 0xF3, 0xEF, 0xEF, 0xEF,
            0xEC, 0xEC, 0xEC, 0xEC, 0xEC, 0xEC, 0xF1, 0xF1, 0xF1, 0xDD, 0xDD, 0xDD, 0xB4, 0xB3, 0xB4,
            0xC6, 0xC6, 0xC6, 0xD3, 0xD3, 0xD3, 0xB7, 0xB7, 0xB7, 0xD0, 0xD0, 0xD0, 0xFF, 0xFF, 0xFF,
            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFE, 0xFC, 0xFC, 0xFC,
            0xF9, 0xF9, 0xF9, 0xF6, 0xF6, 0xF6, 0xF6, 0xF6, 0xF6, 0xF7, 0xF7, 0xF7, 0xC3, 0xC3, 0xC3,
            0xB5, 0xB5, 0xB5, 0xD3, 0xD3, 0xD3, 0xD3, 0xD3, 0xD3, 0xD6, 0xD6, 0xD6, 0xC8, 0xC8, 0xC8,
            0xC6, 0xC6, 0xC6, 0xCC, 0xCC, 0xCC, 0xCB, 0xCB, 0xCB, 0xCB, 0xCB, 0xCB, 0xCB, 0xCB, 0xCB,
            0xCB, 0xCB, 0xCB, 0xCB, 0xCB, 0xCB, 0xCB, 0xCB, 0xCB, 0xCC, 0xCC, 0xCC, 0xC3, 0xC3, 0xC3,
            0xBE, 0xBE, 0xBE, 0xD6, 0xD6, 0xD6, 0xD3, 0xD3, 0xD3, 0xD3, 0xD3, 0xD3, 0xD5, 0xD5, 0xD5,
            0xCB, 0xCB, 0xCB, 0xA3, 0xA3, 0xA3, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5,
            0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5,
            0xA2, 0xA2, 0xA2, 0xC5, 0xC5, 0xC5, 0xD6, 0xD6, 0xD6, 0xD3, 0xD3, 0xD3, 0xD3, 0xD3, 0xD3,
            0xD6, 0xD6, 0xD6, 0xCD, 0xCD, 0xCD, 0xB6, 0xB6, 0xB6, 0xB8, 0xB8, 0xB8, 0xB8, 0xB8, 0xB8,
            0xB8, 0xB8, 0xB8, 0xB8, 0xB8, 0xB8, 0xB8, 0xB8, 0xB8, 0xB8, 0xB8, 0xB8, 0xB8, 0xB8, 0xB8,
            0xB8, 0xB8, 0xB8, 0xB6, 0xB6, 0xB6, 0xCB, 0xCB, 0xCB, 0xD6, 0xD6, 0xD6, 0xD3, 0xD3, 0xD3,
            0xD3, 0xD3, 0xD3, 0xD9, 0xD9, 0xD9, 0xC7, 0xC7, 0xC7, 0xA6, 0xA6, 0xA6, 0xAA, 0xAA, 0xAA,
            0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA,
            0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xA6, 0xA6, 0xA6, 0xC6, 0xC6, 0xC6, 0xD9, 0xD9, 0xD9,
            0xD3, 0xD3, 0xD3, 0xD3, 0xD3, 0xD3, 0xDD, 0xDD, 0xDD, 0xC2, 0xC2, 0xC2, 0xA6, 0xA6, 0xA6,
            0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA,
            0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xA6, 0xA6, 0xA6, 0xC0, 0xC0, 0xC0,
            0xDD, 0xDD, 0xDD, 0xD3, 0xD3, 0xD3, 0xC6, 0xC6, 0xC6, 0xD3, 0xD3, 0xD3, 0xD3, 0xD3, 0xD3,
            0xC8, 0xC2, 0xC8, 0xC5, 0xC5, 0xC5, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC8, 0xC3, 0xC8,
            0xD3, 0xD3, 0xD3, 0xD3, 0xD3, 0xD3, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xB6, 0xB6, 0xB6, 0xB2, 0xB2, 0xB2, 0xB1, 0xB1, 0xB1,
            0xB0, 0xB0, 0xB0, 0xB0, 0xB0, 0xB0, 0xB1, 0xB1, 0xB1, 0xB2, 0xB2, 0xB2, 0xB6, 0xB6, 0xB6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xBC, 0xBC, 0xBC, 0xB9, 0xB9, 0xB9,
            0xB8, 0xB8, 0xB8, 0xB6, 0xB6, 0xB6, 0xB6, 0xB6, 0xB6, 0xB6, 0xB6, 0xB6, 0xB6, 0xB6, 0xB6,
            0xB7, 0xB7, 0xB7, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xBB, 0xBB, 0xBB,
            0xBA, 0xBA, 0xBA, 0xBA, 0xBA, 0xBA, 0xB9, 0xB9, 0xB9, 0xB9, 0xB9, 0xB9, 0xB8, 0xB8, 0xB8,
            0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBA, 0xBA, 0xBA, 0xB9, 0xB9, 0xB9, 0xB8, 0xB8, 0xB8,
            0xB8, 0xB8, 0xB8, 0xB8, 0xB8, 0xB8, 0xB7, 0xB7, 0xB7, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xBB, 0xBB, 0xBB, 0xBA, 0xBA, 0xBA, 0xBA, 0xBA, 0xBA,
            0xB9, 0xB9, 0xB9, 0xB8, 0xB8, 0xB8, 0xB8, 0xB8, 0xB8, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xBB, 0xBB, 0xBB,
            0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6
                };

                MemoryStream msDisabled = new MemoryStream(disabledArray);
                _buttonImageDisabled = Image.FromStream(msDisabled);

                // The hot Print image
                byte[] hotArray = new byte[]
                {
            0x42, 0x4D, 0x36, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x28,
            0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x0B, 0x00, 0x00, 0x13, 0x0B, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB,
            0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB,
            0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xAB, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0x3A, 0x3A, 0x3A, 0xED, 0xED, 0xED, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFE,
            0xFB, 0xFB, 0xFB, 0xF7, 0xF7, 0xF7, 0xF2, 0xF2, 0xF2, 0xEB, 0xEB, 0xEB, 0xE3, 0xE3, 0xE3,
            0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xE7, 0xE7, 0xE7, 0xB6, 0xB6, 0xB6, 0x1D, 0x1C, 0x1E,
            0xC6, 0xC6, 0xC6, 0x7B, 0x77, 0x76, 0x28, 0x22, 0x1F, 0x69, 0x67, 0x66, 0xFF, 0xFF, 0xFF,
            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFE, 0xFA, 0xFA, 0xFA,
            0xF4, 0xF4, 0xF4, 0xEF, 0xEF, 0xEF, 0xF0, 0xF0, 0xF0, 0xF2, 0xF2, 0xF2, 0x40, 0x3E, 0x3E,
            0x23, 0x1D, 0x1B, 0x7B, 0x77, 0x76, 0x7B, 0x77, 0x76, 0x9D, 0x8A, 0x82, 0x54, 0x4B, 0x47,
            0x42, 0x44, 0x44, 0x57, 0x58, 0x58, 0x55, 0x56, 0x56, 0x55, 0x56, 0x56, 0x55, 0x56, 0x56,
            0x55, 0x56, 0x56, 0x55, 0x56, 0x56, 0x55, 0x56, 0x56, 0x58, 0x59, 0x59, 0x3A, 0x3C, 0x3D,
            0x35, 0x30, 0x2D, 0x9F, 0x8C, 0x84, 0x7B, 0x77, 0x76, 0x7B, 0x77, 0x76, 0x9A, 0x89, 0x82,
            0x5F, 0x53, 0x4F, 0x06, 0x03, 0x04, 0x09, 0x06, 0x06, 0x09, 0x06, 0x06, 0x09, 0x06, 0x06,
            0x09, 0x06, 0x06, 0x09, 0x06, 0x06, 0x09, 0x06, 0x06, 0x0A, 0x06, 0x06, 0x0A, 0x06, 0x06,
            0x05, 0x03, 0x03, 0x4A, 0x41, 0x3E, 0x9C, 0x8A, 0x83, 0x7B, 0x77, 0x76, 0x7B, 0x77, 0x76,
            0x9F, 0x8F, 0x89, 0x69, 0x5B, 0x58, 0x29, 0x1F, 0x20, 0x2D, 0x23, 0x24, 0x2D, 0x23, 0x24,
            0x2D, 0x23, 0x24, 0x2D, 0x23, 0x24, 0x2D, 0x23, 0x24, 0x2D, 0x23, 0x24, 0x2D, 0x23, 0x24,
            0x2D, 0x23, 0x24, 0x28, 0x1E, 0x1F, 0x63, 0x54, 0x52, 0x9F, 0x90, 0x89, 0x7B, 0x77, 0x76,
            0x7B, 0x77, 0x76, 0xAF, 0x9F, 0x99, 0x52, 0x49, 0x46, 0x0A, 0x07, 0x08, 0x10, 0x0C, 0x0D,
            0x10, 0x0C, 0x0D, 0x10, 0x0C, 0x0D, 0x10, 0x0C, 0x0D, 0x10, 0x0C, 0x0D, 0x10, 0x0C, 0x0D,
            0x10, 0x0C, 0x0D, 0x10, 0x0C, 0x0D, 0x0A, 0x07, 0x07, 0x4C, 0x43, 0x41, 0xAF, 0x9F, 0x98,
            0x7B, 0x77, 0x76, 0x7B, 0x77, 0x76, 0xC4, 0xB6, 0xAF, 0x41, 0x3A, 0x38, 0x0A, 0x06, 0x07,
            0x10, 0x0C, 0x0C, 0x10, 0x0C, 0x0C, 0x10, 0x0C, 0x0C, 0x10, 0x0C, 0x0C, 0x10, 0x0C, 0x0C,
            0x10, 0x0C, 0x0C, 0x10, 0x0C, 0x0C, 0x10, 0x0C, 0x0C, 0x0A, 0x07, 0x07, 0x3D, 0x35, 0x34,
            0xC1, 0xB4, 0xAD, 0x7B, 0x77, 0x76, 0xC6, 0xC6, 0xC6, 0x7B, 0x77, 0x76, 0x7B, 0x77, 0x76,
            0x4E, 0x43, 0x49, 0x46, 0x41, 0x41, 0x47, 0x43, 0x42, 0x48, 0x43, 0x43, 0x48, 0x43, 0x43,
            0x48, 0x43, 0x43, 0x48, 0x43, 0x43, 0x47, 0x43, 0x42, 0x47, 0x42, 0x42, 0x4E, 0x44, 0x49,
            0x7B, 0x77, 0x76, 0x7B, 0x77, 0x76, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x21, 0x1E, 0x23, 0x1A, 0x18, 0x19, 0x18, 0x16, 0x16,
            0x18, 0x16, 0x16, 0x18, 0x16, 0x16, 0x18, 0x16, 0x16, 0x1B, 0x18, 0x19, 0x22, 0x1E, 0x22,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x2B, 0x26, 0x35, 0x27, 0x21, 0x2D,
            0x24, 0x1F, 0x29, 0x23, 0x1D, 0x27, 0x23, 0x1C, 0x26, 0x22, 0x1C, 0x25, 0x23, 0x1D, 0x27,
            0x25, 0x1F, 0x28, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x2A, 0x24, 0x33,
            0x29, 0x23, 0x31, 0x28, 0x23, 0x2F, 0x28, 0x22, 0x2D, 0x27, 0x21, 0x2C, 0x26, 0x1F, 0x2B,
            0x24, 0x1F, 0x28, 0x24, 0x1F, 0x27, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0x2A, 0x24, 0x33, 0x2C, 0x26, 0x33, 0x28, 0x23, 0x2E, 0x27, 0x21, 0x2D, 0x26, 0x20, 0x2B,
            0x25, 0x1F, 0x2A, 0x27, 0x20, 0x2A, 0x24, 0x1F, 0x27, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x2A, 0x24, 0x33, 0x29, 0x23, 0x30, 0x29, 0x23, 0x2E,
            0x28, 0x22, 0x2D, 0x28, 0x21, 0x2B, 0x27, 0x20, 0x2A, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x2A, 0x24, 0x33,
            0x2A, 0x24, 0x33, 0x2A, 0x24, 0x33, 0x2A, 0x24, 0x33, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
            0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6
                };

                MemoryStream msHot = new MemoryStream(hotArray);
                _buttonImageHot = Image.FromStream(msHot);
            }
        }
    }
}
